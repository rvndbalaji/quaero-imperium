export interface RDNAttributes {
    [name: string]: string;
}
/**
 * RDN is a part of DN and it consists of key & value pair. This class also supports
 * compound RDNs, meaning that one RDN can hold multiple key & value pairs.
 */
export declare class RDN {
    private attrs;
    constructor(attrs?: RDNAttributes);
    /**
     * Set an RDN pair.
     *
     * @param name
     * @param value
     */
    set(name: string, value: string): this;
    /**
     * Get an RDN value at the specified name.
     *
     * @param name
     * @returns value
     */
    get(name: string): string;
    /**
     * Checks, if this instance of RDN is equal to the other RDN.
     *
     * @param other
     */
    equals(other: RDN): boolean;
    /**
     * Parse the RDN, escape values & return a string representation.
     *
     * @returns Escaped string representation of RDN.
     */
    toString(): string;
    /**
     * Escape values & return a string representation.
     *
     * RFC defines, that these characters should be escaped:
     *
     * Comma 	                        ,
     * Backslash character 	          \
     * Pound sign (hash sign) 	      #
     * Plus sign 	                    +
     * Less than symbol 	            <
     * Greater than symbol 	          >
     * Semicolon 	                    ;
     * Double quote (quotation mark) 	"
     * Equal sign 	                  =
     * Leading or trailing spaces
     *
     * @param value RDN value to be escaped
     * @returns Escaped string representation of RDN
     */
    private _escape;
}
