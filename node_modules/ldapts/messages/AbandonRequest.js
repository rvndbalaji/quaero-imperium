"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const Message_1 = require("./Message");
const ProtocolOperation_1 = require("../ProtocolOperation");
const assert = __importStar(require("assert"));
class AbandonRequest extends Message_1.Message {
    constructor(options) {
        super(options);
        this.protocolOperation = ProtocolOperation_1.ProtocolOperation.LDAP_REQ_ABANDON;
        this.abandonId = options.abandonId || 0;
    }
    writeMessage(writer) {
        // Encode abandon request using different ASN.1 integer logic
        /* tslint:disable:no-bitwise no-increment-decrement */
        let i = this.abandonId;
        let intSize = 4;
        const mask = 0xff800000;
        while ((((i & mask) === 0) || ((i & mask) === mask)) && (intSize > 1)) {
            intSize--;
            i <<= 8;
        }
        assert.ok(intSize <= 4);
        while (intSize-- > 0) {
            writer.writeByte((i & 0xff000000) >> 24);
            i <<= 8;
        }
        /* tslint:enable:no-bitwise no-increment-decrement */
    }
    parseMessage(reader) {
        const length = reader.length;
        // Abandon request messages are encoded using different ASN.1 integer logic, forcing custom decoding logic
        let offset = 0;
        let value;
        /* tslint:disable:no-bitwise no-increment-decrement */
        const fb = reader.buffer[offset++];
        value = fb & 0x7F;
        for (let i = 1; i < length; i++) {
            value <<= 8;
            value |= (reader.buffer[offset++] & 0xff);
        }
        if ((fb & 0x80) === 0x80) {
            value = -value;
        }
        /* tslint:enable:no-bitwise no-increment-decrement */
        reader._offset += length;
        this.abandonId = value;
    }
}
exports.AbandonRequest = AbandonRequest;
//# sourceMappingURL=AbandonRequest.js.map